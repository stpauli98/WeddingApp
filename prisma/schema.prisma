generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id           String         @id @default(uuid())
  email        String         @unique
  passwordHash String
  createdAt    DateTime       @default(now())
  eventId      String?        @unique
  firstName    String
  lastName     String
  sessions     AdminSession[]
  event        Event?         @relation("AdminEvent")
}

model Event {
  id           String   @id @default(uuid())
  coupleName   String
  location     String
  date         DateTime
  slug         String   @unique
  createdAt    DateTime @default(now())
  adminId      String?  @unique
  guestMessage String?
  admin        Admin?   @relation("AdminEvent", fields: [adminId], references: [id])
  guests       Guest[]
}

model Guest {
  id             String             @id @default(uuid())
  email          String    
  code           String?
  verified       Boolean            @default(false)
  codeExpires    DateTime?
  createdAt      DateTime           @default(now())
  eventId        String
  firstName      String
  lastName       String
  sessionExpires DateTime?
  sessionToken   String?
  event          Event              @relation(fields: [eventId], references: [id])
  images         Image[]
  message        Message?
  pushSubscriptions PushSubscription[]
}

model Image {
  id          String   @id @default(uuid())
  guestId     String
  imageUrl    String
  createdAt   DateTime @default(now())
  storagePath String?
  guest       Guest    @relation(fields: [guestId], references: [id])
}

model Message {
  id        String   @id @default(uuid())
  guestId   String   @unique
  text      String
  createdAt DateTime @default(now())
  guest     Guest    @relation(fields: [guestId], references: [id])
}

model AdminSession {
  id           String   @id @default(uuid())
  adminId      String
  sessionToken String   @unique
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  admin        Admin    @relation(fields: [adminId], references: [id])
}

model PushSubscription {
  id           String   @id @default(uuid())
  guestId      String
  subscription String   @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  guest        Guest    @relation(fields: [guestId], references: [id], onDelete: Cascade)
}
